# microservice specific routes

# cases endpoints
GET           /cases                            @uk.gov.hmrc.bindingtariffclassification.controllers.CaseController.get(query: uk.gov.hmrc.bindingtariffclassification.model.CaseSearch, pagination: uk.gov.hmrc.bindingtariffclassification.model.Pagination ?= uk.gov.hmrc.bindingtariffclassification.model.Pagination())
POST          /cases                            @uk.gov.hmrc.bindingtariffclassification.controllers.CaseController.create
GET           /cases/:reference                 @uk.gov.hmrc.bindingtariffclassification.controllers.CaseController.getByReference(reference: String)
PUT           /cases/:reference                 @uk.gov.hmrc.bindingtariffclassification.controllers.CaseController.put(reference: String)
POST          /cases/:reference                 @uk.gov.hmrc.bindingtariffclassification.controllers.CaseController.update(reference: String)

# events endpoints
GET           /events                           @uk.gov.hmrc.bindingtariffclassification.controllers.EventController.search(query: uk.gov.hmrc.bindingtariffclassification.model.EventSearch, pagination: uk.gov.hmrc.bindingtariffclassification.model.Pagination ?= uk.gov.hmrc.bindingtariffclassification.model.Pagination())
GET           /cases/:reference/events          @uk.gov.hmrc.bindingtariffclassification.controllers.EventController.getByCaseReference(reference: String, pagination: uk.gov.hmrc.bindingtariffclassification.model.Pagination ?= uk.gov.hmrc.bindingtariffclassification.model.Pagination())
POST          /cases/:reference/events          @uk.gov.hmrc.bindingtariffclassification.controllers.EventController.create(reference: String)

# reporting endpoints
GET           /report/summary                   @uk.gov.hmrc.bindingtariffclassification.controllers.ReportingController.summaryReport(report: uk.gov.hmrc.bindingtariffclassification.model.reporting.SummaryReport, pagination: uk.gov.hmrc.bindingtariffclassification.model.Pagination ?= uk.gov.hmrc.bindingtariffclassification.model.Pagination())
GET           /report/cases                     @uk.gov.hmrc.bindingtariffclassification.controllers.ReportingController.caseReport(report: uk.gov.hmrc.bindingtariffclassification.model.reporting.CaseReport, pagination: uk.gov.hmrc.bindingtariffclassification.model.Pagination ?= uk.gov.hmrc.bindingtariffclassification.model.Pagination())
GET           /report/queues                    @uk.gov.hmrc.bindingtariffclassification.controllers.ReportingController.queueReport(report: uk.gov.hmrc.bindingtariffclassification.model.reporting.QueueReport, pagination: uk.gov.hmrc.bindingtariffclassification.model.Pagination ?= uk.gov.hmrc.bindingtariffclassification.model.Pagination())

# users endpoints
POST          /users                            @uk.gov.hmrc.bindingtariffclassification.controllers.UsersController.createUser
GET           /users                            @uk.gov.hmrc.bindingtariffclassification.controllers.UsersController.allUsers(query: uk.gov.hmrc.bindingtariffclassification.model.UserSearch, pagination: uk.gov.hmrc.bindingtariffclassification.model.Pagination ?= uk.gov.hmrc.bindingtariffclassification.model.Pagination())
PUT           /users/:id                        @uk.gov.hmrc.bindingtariffclassification.controllers.UsersController.updateUser(id: String)
GET           /users/:id                        @uk.gov.hmrc.bindingtariffclassification.controllers.UsersController.fetchUserDetails(id: String)
PUT           /mark-deleted/users/:id           @uk.gov.hmrc.bindingtariffclassification.controllers.UsersController.markDeleted(id: String)

# admin/test endpoints
DELETE        /cases                            @uk.gov.hmrc.bindingtariffclassification.controllers.CaseController.deleteAll()
DELETE        /events                           @uk.gov.hmrc.bindingtariffclassification.controllers.EventController.deleteAll()
DELETE        /case/:reference                  @uk.gov.hmrc.bindingtariffclassification.controllers.CaseController.delete(reference: String)
DELETE        /events/:reference                @uk.gov.hmrc.bindingtariffclassification.controllers.EventController.deleteCaseEvents(reference: String)
PUT           /scheduler/days-elapsed           @uk.gov.hmrc.bindingtariffclassification.controllers.SchedulerController.incrementActiveDaysElapsed()
PUT           /scheduler/referred-days-elapsed  @uk.gov.hmrc.bindingtariffclassification.controllers.SchedulerController.incrementReferredDaysElapsed()
PUT           /scheduler/filestore-cleanup      @uk.gov.hmrc.bindingtariffclassification.controllers.SchedulerController.fileStoreCleanup()
PUT           /migrations/amend-date-of-extract @uk.gov.hmrc.bindingtariffclassification.controllers.MigrationController.amendDateOfExtract()