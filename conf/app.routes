# microservice specific routes

# todo this wants re-implimented
#GET        /trader-details/:acknowledgementReference/:eoriNumber             uk.gov.hmrc.advancevaluationrulings.controllers.ValuationRulingsController.retrieveTraderDetails(acknowledgementReference: String, eoriNumber: String)


# cases endpoints
GET           /cases                            @controllers.CaseController.get(query: model.CaseSearch, pagination: model.Pagination ?= model.Pagination())

POST          /application                      @controllers.CaseController.create # todo delete this when FE is using 'POST /cases'
POST          /cases                            @controllers.CaseController.create
GET           /cases/:reference                 @controllers.CaseController.getByReference(reference: String)
PUT           /cases/:reference                 @controllers.CaseController.put(reference: String)
POST          /cases/:reference                 @controllers.CaseController.update(reference: String)

# events endpoints
GET           /events                           @controllers.EventController.search(query: model.EventSearch, pagination: model.Pagination ?= model.Pagination())
GET           /cases/:reference/events          @controllers.EventController.getByCaseReference(reference: String, pagination: model.Pagination ?= model.Pagination())
POST          /cases/:reference/events          @controllers.EventController.create(reference: String)

# reporting endpoints
GET           /report/summary                   @controllers.ReportingController.summaryReport(report: model.reporting.SummaryReport, pagination: model.Pagination ?= model.Pagination())
GET           /report/cases                     @controllers.ReportingController.caseReport(report: model.reporting.CaseReport, pagination: model.Pagination ?= model.Pagination())
GET           /report/queues                    @controllers.ReportingController.queueReport(report: model.reporting.QueueReport, pagination: model.Pagination ?= model.Pagination())

# users endpoints
POST          /users                            @controllers.UsersController.createUser
GET           /users                            @controllers.UsersController.allUsers(query: model.UserSearch, pagination: model.Pagination ?= model.Pagination())
PUT           /users/:id                        @controllers.UsersController.updateUser(id: String)
GET           /users/:id                        @controllers.UsersController.fetchUserDetails(id: String)
PUT           /mark-deleted/users/:id           @controllers.UsersController.markDeleted(id: String)

# keyword endpoints
POST          /keyword                          @controllers.KeywordController.addKeyword
DELETE        /keyword/:name                    @controllers.KeywordController.deleteKeyword(name: String)
POST          /keyword/:name/approve            @controllers.KeywordController.approveKeyword(name: String)
GET           /keywords                         @controllers.KeywordController.getAllKeywords(pagination: model.Pagination ?= model.Pagination())
GET           /case-keywords                    @controllers.KeywordController.fetchCaseKeywords(pagination: model.Pagination ?= model.Pagination())

# admin/test endpoints
DELETE        /cases                            @controllers.CaseController.deleteAll()
DELETE        /events                           @controllers.EventController.deleteAll()
DELETE        /case/:reference                  @controllers.CaseController.delete(reference: String)
DELETE        /events/:reference                @controllers.EventController.deleteCaseEvents(reference: String)
PUT           /migrations/amend-date-of-extract @controllers.MigrationController.amendDateOfExtract()

# bta integration endpoints

GET           /bta-card                         @controllers.BtaCardController.getBtaCard
